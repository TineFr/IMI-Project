

@if (Cage != null)
{
   <h1 class="purple">@Cage.Name</h1>

<div class="detailscontainer">
    <div class="detailsflex">

        <img class="detailimage" src="@Cage.Image" />
        <div>
            <h2>@Cage.Name</h2>
            <p> Location: @Cage.Location</p>

        </div>
        <div class="d-xl-inline-flex">
            <a href="@($"editcage/{Cage.Id}")" type="button" class="btn alert-light m-1  blue">Edit</a>
            <a type="button" class="btn alert-danger m-1" @onclick="() => DeleteCage(Cage.Id)">Delete</a>
        </div>
    </div>

</div> 
}




@code {
    @inject NavigationManager NavManager;

    [Parameter]
    public CageModel Cage { get; set; }

    [Inject]
    public IBaseApiService<CageRequestModel, CageModel> _cageService { get; set; }

    [Parameter]
    public Guid Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Cage =  await _cageService.GetByIdAsync($"cages/{Id}");
    }

    private async void DeleteCage(string id)
    {
          var result =  await _cageService.DeleteAsync($"cages/{Id}");

        if (result is object)
        {


        }
        else NavManager.NavigateTo("cages");
    }


}