@using Microsoft.AspNetCore.SignalR.Client



@if (!startGame)
{
    <h3>Multiplayer</h3>
    <div class="item">
        <button @onclick="CreateRoom">Create Room</button>
    </div>

    <div class="quiztitle"><h3>Available Rooms</h3></div>

    <div>
        
        @foreach (var item in Rooms)
        {
            <button class="room" @onclick="() => JoinRoom(item.Id)" margin="10px"><p >@item.Name</p>Players: @item.playerAmount / @item.maxPlayerAmount</button>
        }
    </div>
}

else
{
    <QuestionView connection="connection"></QuestionView>

}




@code {
    bool back = false;
    bool startGame;
    HubConnection connection { get; set; }

    [Inject]
    public IRoomService _roomService { get; set; }

    private List<Room> Rooms  { get; set; }

    private async Task ShowRooms()
    {
        Rooms = null;
        Rooms = await _roomService.ShowAvailableRooms();
        //back = true;
    }

    protected override async Task OnInitializedAsync()
    {
        connection = new HubConnectionBuilder()
       .WithUrl("https://localhost:44371/multiplayer")
       .Build();
        await ShowRooms();
    }

    private async Task CreateRoom()
    {

        await connection.StartAsync();
        string roomId = Guid.NewGuid().ToString();
        await connection.SendAsync("CreateRoom", roomId, "name", 2);
        startGame = true;
    }

    private async Task JoinRoom(string roomId)
    {
      await connection.StartAsync();
      await connection.SendAsync("JoinRoom", roomId);
      startGame = true;
    }
}
